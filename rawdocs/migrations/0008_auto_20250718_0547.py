# Generated by Django 3.1.12 on 2025-07-18 04:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rawdocs', '0007_annotationtype_rawdocument_is_validated_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AILearningMetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_version', models.CharField(default='groq_llama3.3_70b', max_length=50)),
                ('precision_score', models.FloatField(default=0.0)),
                ('recall_score', models.FloatField(default=0.0)),
                ('f1_score', models.FloatField(default=0.0)),
                ('total_feedbacks', models.IntegerField(default=0)),
                ('improvement_rate', models.FloatField(default=0.0)),
                ('entity_performance', models.JSONField(default=dict, help_text="Performance par type d'entité")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PromptOptimization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(max_length=100)),
                ('optimized_prompt', models.TextField()),
                ('performance_score', models.FloatField()),
                ('feedback_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='documentpage',
            name='human_validated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='documentpage',
            name='is_validated_by_human',
            field=models.BooleanField(default=False, help_text='Page validée par un humain'),
        ),
        migrations.AddField(
            model_name='documentpage',
            name='validated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_pages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='confidence_score',
            field=models.FloatField(default=0.0, help_text='Score de confiance (0.0–1.0)'),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='annotationsession',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='annotationtype',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='documentpage',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='metadatalog',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='rawdocument',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='AnnotationFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_annotations_before', models.JSONField(help_text='Annotations IA avant correction humaine')),
                ('human_annotations_after', models.JSONField(help_text='Annotations finales après validation humaine')),
                ('corrections_made', models.JSONField(help_text='Corrections effectuées: ajouts, suppressions, modifications')),
                ('feedback_score', models.FloatField(default=0.0, help_text='Score global de feedback (0-1)')),
                ('validated_at', models.DateTimeField(auto_now_add=True)),
                ('annotator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='rawdocs.documentpage')),
            ],
            options={
                'unique_together': {('page', 'annotator')},
            },
        ),
    ]
